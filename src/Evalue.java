/*
 * Reference:
 * The value assessment is referenced from the Internet. I made some change to be more intelligent  
 */

public class Evalue {
	
	//Basic Value For Each Piece
	public static final int[] BasicValues = {1000, 80, 80, 176, 400, 192, 50};//G M E K R C P
	
	//Position Value For Each Piece
	public static final int[][] PosValues = {
		{ // King
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			1, -8, -9,  0,  0,  0,  0,  0,  0,  0,
			5, -8, -9,  0,  0,  0,  0,  0,  0,  0,
			1, -8, -9,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		}, { // Advisor
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  5,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		}, { // Bishop
			0,  0, -10,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  5,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0, -10,  0,  0,  0,  0,  0,  0,  0
		}, { // Knight
			0, -3,  5,  4,  2,  2,  5,  4,  2,  2,
	   	-3,  2,  4,  6, 10, 12, 20, 10,  8,  2,
			2,  4,  35, 10, 13, 11, 12, 11, 15,  2,
			0,  5,  7,  7, 14, 15, 19, 15,  9,  8,
			2,-10,  4, 10, 15, 16, 12, 11,  6,  2,
			0,  5,  7,  7, 14, 15, 19, 15,  9,  8,
			2,  4,  35, 10, 13, 11, 12, 11, 15,  2,
	   	-3,  2,  4,  6, 10, 12, 20, 10,  8,  2,
			0, -3,  5,  4,  2,  2,  5,  4,  2,  2
		}, { // Rook
	   	-6,  5, -2,  4,  8,  8,  6,  6,  6,  6,
			6,  8,  8,  9, 12, 11, 13,  8, 12,  8,
			4,  6,  4,  4, 12, 11, 13,  7,  9,  7,
	   	12, 12, 12, 12, 14, 14, 16, 14, 16, 13,
			0,  0, 12, 14, 15, 15, 16, 16, 33, 14,
	   	12, 12, 12, 12, 14, 14, 16, 14, 16, 13,
			4,  6,  4,  4, 12, 11, 13,  7,  9,  7,
			6,  8,  8,  9, 12, 11, 13,  8, 12,  8,
	   	-6,  5, -2,  4,  8,  8,  6,  6,  6,  6
		}, { // Cannon
			0,  0,  1,  0, -1,  0,  0,  1,  2,  4,
			0,  1,  0,  0,  0,  0,  3,  1,  2,  4,
			1,  2,  4,  0,  3,  0,  3,  0,  0,  0,
			3,  2,  3,  0,  0,  0,  2, -5, -4, -5,
			3,  2,  5,  0,  4,  4,  4, -4, -7, -6,
			3,  2,  3,  0,  0,  0,  2, -5, -4, -5,
			1,  2,  4,  0,  3,  0,  3,  0,  0,  0,
			0,  1,  0,  0,  0,  0,  3,  1,  2,  4,
			0,  0,  1,  0, -1,  0,  0,  1,  2,  4
		}, { // Pawn
			0,  0,  0, -2,  3, 10, 20, 20, 20,  0,
			0,  0,  0,  0,  0, 18, 27, 30, 30,  0,
			0,  0,  0, -2,  4, 22, 30, 45, 50,  0,
			0,  0,  0,  0,  0, 35, 40, 55, 65,  2,
			0,  0,  0,  6,  7, 37, 42, 55, 70,  4,
			0,  0,  0,  0,  0, 35, 40, 55, 65,  2,
			0,  0,  0, -2,  4, 22, 30, 45, 50,  0,
			0,  0,  0,  0,  0, 18, 27, 30, 30,  0,
			0,  0,  0, -2,  3, 10, 20, 20, 20,  0
		}
	};
	
	public static int h(int[][] p){
		int value=0;
		
		for(int i=1; i<=9; i++)
		{
			for(int j=1; j<=10; j++){
				if(p[i][j]>0){
				value+=BasicValues[Math.abs(p[i][j])-1];
				value+=PosValues[Math.abs(p[i][j])-1][(i-1)*10+j-1];
				
				}
				else if(p[i][j]<0){
					value-=BasicValues[Math.abs(p[i][j])-1];
					value-=PosValues[Math.abs(p[i][j])-1][(i-1)*10+10-j];
				}
				else{}
			}
		}
		return value;
	}
}